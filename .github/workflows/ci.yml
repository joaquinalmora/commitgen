name: CI

on:
  push:
    branches: [ main, try1 ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  test:
    name: Unit tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: [1.23, 1.25]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Check gofmt
        shell: bash
        run: |
          if [ -n "$(gofmt -l .)" ]; then
            echo "gofmt needs to be run on these files:";
            gofmt -l .;
            exit 1;
          fi
      - name: Run tests
        run: go test ./...
      
      - name: Run tests with coverage
        run: go test -v -race -coverprofile=coverage.out ./...
      
      - name: Upload coverage to Codecov
        if: github.event_name == 'push' && matrix.os == 'ubuntu-latest' && matrix.go-version == '1.25'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.out
          fail_ci_if_error: false

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --timeout=5m

  macos-manual:
    name: macOS smoke (manual)
    runs-on: macos-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25'
      - name: Run macOS smoke
        run: go test ./...

  e2e-manual:
    name: e2e integration (manual)
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25'
      - name: Run e2e test
        run: go test ./e2e -run TestSuggestPlainIntegration -v
